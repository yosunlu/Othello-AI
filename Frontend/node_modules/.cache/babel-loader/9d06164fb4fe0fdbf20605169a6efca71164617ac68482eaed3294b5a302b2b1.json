{"ast":null,"code":"var _jsxFileName = \"/Users/yushanlu/Desktop/Othello/othello-test/src/Canvas-test.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CanvasComponent() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Draw a red rectangle\n    var cw = canvas.width;\n    var ch = canvas.height;\n    var b = 2; // Padding between cells\n    var gridsize = 75;\n    var fps = 50;\n    var board = [];\n    var whiteCount = 0;\n    var blackCount = 0;\n    function init() {\n      paused = 0;\n      board = [];\n      for (let i = 0; i < 8; i++) {\n        board[i] = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      }\n      board[3][3] = \"W\";\n      board[4][3] = \"B\";\n      board[4][4] = \"W\";\n      board[3][4] = \"B\";\n      whiteCount = 2;\n      blackCount = 2;\n    }\n    init();\n    setInterval(draw, 1000 / fps);\n\n    /* **************** */\n    /*      DRAW        */\n    /* **************** */\n\n    // This runs every frame and handles all rendering drawing operations.\n    function draw() {\n      // Without this, previous frames remain on the screen\n      ctx.clearRect(0, 0, cw, ch);\n\n      // Background\n      ctx.fillStyle = \"green\";\n      ctx.fillRect(0, 0, cw, ch);\n      ctx.fillStyle = \"black\";\n\n      // Draw the lines\n      for (var d1 = 0; d1 < 602; d1 += gridsize) {\n        ctx.fillRect(d1, 0, b, ch);\n        ctx.fillRect(0, d1, cw, b);\n      }\n\n      // Draw the 4 weird little circles around the middle 4 squares:\n      ctx.beginPath();\n      ctx.arc(150 + b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n      ctx.beginPath();\n      ctx.arc(150 + b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n      ctx.beginPath();\n      ctx.arc(452 - b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n      ctx.beginPath();\n      ctx.arc(452 - b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n\n      // Change the content of the piece-counters\n      //numWhiteElement.textContent = \"white:  \" + whiteCount;\n      //numBlackElement.textContent = \"black:  \" + blackCount;\n\n      // Draw the pieces\n      for (let x = 0; x < 8; x++) {\n        for (let y = 0; y < 8; y++) {\n          if (board[x][y] == \"W\") {\n            ctx.beginPath();\n            ctx.arc(\n            // define the circle\n            x * gridsize + gridsize / 2, y * gridsize + gridsize / 2, gridsize / 2 - 4 * b,\n            // radius\n            0,\n            // startAngle\n            2 * Math.PI // endAngle\n            );\n\n            ctx.fillStyle = \"white\";\n            ctx.fill();\n            ctx.closePath();\n          } else if (board[x][y] == \"B\") {\n            ctx.beginPath();\n            ctx.arc(x * gridsize + gridsize / 2, y * gridsize + gridsize / 2, gridsize / 2 - 4 * b, 0, 2 * Math.PI);\n            ctx.fillStyle = \"black\";\n            ctx.fill();\n            ctx.closePath();\n          }\n        }\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 200,\n    height: 200\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n}\n_s(CanvasComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","CanvasComponent","_s","canvasRef","canvas","current","ctx","getContext","cw","width","ch","height","b","gridsize","fps","board","whiteCount","blackCount","init","paused","i","setInterval","draw","clearRect","fillStyle","fillRect","d1","beginPath","arc","Math","PI","fill","closePath","x","y","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yushanlu/Desktop/Othello/othello-test/src/Canvas-test.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nfunction CanvasComponent() {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Draw a red rectangle\n    var cw = canvas.width;\n    var ch = canvas.height;\n    var b = 2; // Padding between cells\n    var gridsize = 75;\n    var fps = 50;\n\n    var board = [];\n    var whiteCount = 0;\n    var blackCount = 0;\n\n    function init() {\n      paused = 0;\n      board = [];\n\n      for (let i = 0; i < 8; i++) {\n        board[i] = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      }\n\n      board[3][3] = \"W\";\n      board[4][3] = \"B\";\n      board[4][4] = \"W\";\n      board[3][4] = \"B\";\n\n      whiteCount = 2;\n      blackCount = 2;\n    }\n\n    init();\n    setInterval(draw, 1000 / fps);\n\n    /* **************** */\n    /*      DRAW        */\n    /* **************** */\n\n    // This runs every frame and handles all rendering drawing operations.\n    function draw() {\n      // Without this, previous frames remain on the screen\n      ctx.clearRect(0, 0, cw, ch);\n\n      // Background\n      ctx.fillStyle = \"green\";\n      ctx.fillRect(0, 0, cw, ch);\n\n      ctx.fillStyle = \"black\";\n\n      // Draw the lines\n      for (var d1 = 0; d1 < 602; d1 += gridsize) {\n        ctx.fillRect(d1, 0, b, ch);\n        ctx.fillRect(0, d1, cw, b);\n      }\n\n      // Draw the 4 weird little circles around the middle 4 squares:\n      ctx.beginPath();\n      ctx.arc(150 + b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.arc(150 + b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n      ctx.beginPath();\n\n      ctx.arc(452 - b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.arc(452 - b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n\n      // Change the content of the piece-counters\n      //numWhiteElement.textContent = \"white:  \" + whiteCount;\n      //numBlackElement.textContent = \"black:  \" + blackCount;\n\n      // Draw the pieces\n      for (let x = 0; x < 8; x++) {\n        for (let y = 0; y < 8; y++) {\n          if (board[x][y] == \"W\") {\n            ctx.beginPath();\n            ctx.arc(\n              // define the circle\n              x * gridsize + gridsize / 2,\n              y * gridsize + gridsize / 2,\n              gridsize / 2 - 4 * b, // radius\n              0, // startAngle\n              2 * Math.PI // endAngle\n            );\n            ctx.fillStyle = \"white\";\n            ctx.fill();\n            ctx.closePath();\n          } else if (board[x][y] == \"B\") {\n            ctx.beginPath();\n            ctx.arc(\n              x * gridsize + gridsize / 2,\n              y * gridsize + gridsize / 2,\n              gridsize / 2 - 4 * b,\n              0,\n              2 * Math.PI\n            );\n            ctx.fillStyle = \"black\";\n            ctx.fill();\n            ctx.closePath();\n          }\n        }\n      }\n    }\n  }, []);\n\n  return <canvas ref={canvasRef} width={200} height={200} />;\n}\n\nexport default CanvasComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACA,IAAIC,EAAE,GAAGJ,MAAM,CAACK,KAAK;IACrB,IAAIC,EAAE,GAAGN,MAAM,CAACO,MAAM;IACtB,IAAIC,CAAC,GAAG,CAAC,CAAC,CAAC;IACX,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,GAAG,GAAG,EAAE;IAEZ,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,UAAU,GAAG,CAAC;IAElB,SAASC,IAAIA,CAAA,EAAG;MACdC,MAAM,GAAG,CAAC;MACVJ,KAAK,GAAG,EAAE;MAEV,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1BL,KAAK,CAACK,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC7C;MAEAL,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MACjBA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MACjBA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MACjBA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;MAEjBC,UAAU,GAAG,CAAC;MACdC,UAAU,GAAG,CAAC;IAChB;IAEAC,IAAI,CAAC,CAAC;IACNG,WAAW,CAACC,IAAI,EAAE,IAAI,GAAGR,GAAG,CAAC;;IAE7B;IACA;IACA;;IAEA;IACA,SAASQ,IAAIA,CAAA,EAAG;MACd;MACAhB,GAAG,CAACiB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEf,EAAE,EAAEE,EAAE,CAAC;;MAE3B;MACAJ,GAAG,CAACkB,SAAS,GAAG,OAAO;MACvBlB,GAAG,CAACmB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEjB,EAAE,EAAEE,EAAE,CAAC;MAE1BJ,GAAG,CAACkB,SAAS,GAAG,OAAO;;MAEvB;MACA,KAAK,IAAIE,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,GAAG,EAAEA,EAAE,IAAIb,QAAQ,EAAE;QACzCP,GAAG,CAACmB,QAAQ,CAACC,EAAE,EAAE,CAAC,EAAEd,CAAC,EAAEF,EAAE,CAAC;QAC1BJ,GAAG,CAACmB,QAAQ,CAAC,CAAC,EAAEC,EAAE,EAAElB,EAAE,EAAEI,CAAC,CAAC;MAC5B;;MAEA;MACAN,GAAG,CAACqB,SAAS,CAAC,CAAC;MACfrB,GAAG,CAACsB,GAAG,CAAC,GAAG,GAAGhB,CAAC,GAAG,CAAC,EAAE,GAAG,GAAGA,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGiB,IAAI,CAACC,EAAE,CAAC;MACxDxB,GAAG,CAACyB,IAAI,CAAC,CAAC;MACVzB,GAAG,CAAC0B,SAAS,CAAC,CAAC;MAEf1B,GAAG,CAACqB,SAAS,CAAC,CAAC;MACfrB,GAAG,CAACsB,GAAG,CAAC,GAAG,GAAGhB,CAAC,GAAG,CAAC,EAAE,GAAG,GAAGA,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGiB,IAAI,CAACC,EAAE,CAAC;MACxDxB,GAAG,CAACyB,IAAI,CAAC,CAAC;MACVzB,GAAG,CAAC0B,SAAS,CAAC,CAAC;MACf1B,GAAG,CAACqB,SAAS,CAAC,CAAC;MAEfrB,GAAG,CAACsB,GAAG,CAAC,GAAG,GAAGhB,CAAC,GAAG,CAAC,EAAE,GAAG,GAAGA,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGiB,IAAI,CAACC,EAAE,CAAC;MACxDxB,GAAG,CAACyB,IAAI,CAAC,CAAC;MACVzB,GAAG,CAAC0B,SAAS,CAAC,CAAC;MAEf1B,GAAG,CAACqB,SAAS,CAAC,CAAC;MACfrB,GAAG,CAACsB,GAAG,CAAC,GAAG,GAAGhB,CAAC,GAAG,CAAC,EAAE,GAAG,GAAGA,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGA,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGiB,IAAI,CAACC,EAAE,CAAC;MACxDxB,GAAG,CAACyB,IAAI,CAAC,CAAC;MACVzB,GAAG,CAAC0B,SAAS,CAAC,CAAC;;MAEf;MACA;MACA;;MAEA;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UAC1B,IAAInB,KAAK,CAACkB,CAAC,CAAC,CAACC,CAAC,CAAC,IAAI,GAAG,EAAE;YACtB5B,GAAG,CAACqB,SAAS,CAAC,CAAC;YACfrB,GAAG,CAACsB,GAAG;YACL;YACAK,CAAC,GAAGpB,QAAQ,GAAGA,QAAQ,GAAG,CAAC,EAC3BqB,CAAC,GAAGrB,QAAQ,GAAGA,QAAQ,GAAG,CAAC,EAC3BA,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGD,CAAC;YAAE;YACtB,CAAC;YAAE;YACH,CAAC,GAAGiB,IAAI,CAACC,EAAE,CAAC;YACd,CAAC;;YACDxB,GAAG,CAACkB,SAAS,GAAG,OAAO;YACvBlB,GAAG,CAACyB,IAAI,CAAC,CAAC;YACVzB,GAAG,CAAC0B,SAAS,CAAC,CAAC;UACjB,CAAC,MAAM,IAAIjB,KAAK,CAACkB,CAAC,CAAC,CAACC,CAAC,CAAC,IAAI,GAAG,EAAE;YAC7B5B,GAAG,CAACqB,SAAS,CAAC,CAAC;YACfrB,GAAG,CAACsB,GAAG,CACLK,CAAC,GAAGpB,QAAQ,GAAGA,QAAQ,GAAG,CAAC,EAC3BqB,CAAC,GAAGrB,QAAQ,GAAGA,QAAQ,GAAG,CAAC,EAC3BA,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGD,CAAC,EACpB,CAAC,EACD,CAAC,GAAGiB,IAAI,CAACC,EACX,CAAC;YACDxB,GAAG,CAACkB,SAAS,GAAG,OAAO;YACvBlB,GAAG,CAACyB,IAAI,CAAC,CAAC;YACVzB,GAAG,CAAC0B,SAAS,CAAC,CAAC;UACjB;QACF;MACF;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhC,OAAA;IAAQmC,GAAG,EAAEhC,SAAU;IAACM,KAAK,EAAE,GAAI;IAACE,MAAM,EAAE;EAAI;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D;AAACrC,EAAA,CAvHQD,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAyHxB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}