{"ast":null,"code":"var _jsxFileName = \"/Users/yushanlu/Desktop/Othello/othello-test/src/GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Logo from './Logo';\nimport './GamePage.module.css';\nimport styles from './GamePage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const canvasRef = useRef(null);\n  const [started, setStarted] = useState(0);\n  const [board, setBoard] = useState([]);\n  const [whiteCount, setWhiteCount] = useState(2);\n  const [blackCount, setBlackCount] = useState(2);\n  const [turn, setTurn] = useState(\"W\");\n  const [ws, setWs] = useState(null);\n  const [userId, setUserId] = useState(localStorage.getItem(\"userid\"));\n  const [guestId, setGuestId] = useState(localStorage.getItem(\"guestid\"));\n  const canvas = canvasRef.current;\n  const ctx = canvas && canvas.getContext(\"2d\");\n  const cw = canvas && canvas.width;\n  const ch = canvas && canvas.height;\n  const b = 2; // Padding between cells\n  const gridsize = 75;\n  function obtainScreenInformation() {\n    const mobile = canvas.height > canvas.width;\n  }\n  function init() {\n    const initialBoard = Array(8).fill(\"\").map(() => Array(8).fill(\"\"));\n    initialBoard[3][3] = \"W\";\n    initialBoard[4][3] = \"B\";\n    initialBoard[4][4] = \"W\";\n    initialBoard[3][4] = \"B\";\n    setBoard(initialBoard);\n    setWhiteCount(2);\n    setBlackCount(2);\n  }\n  function draw() {\n    if (!ctx) return;\n    // Without this, previous frames remain on the screen\n    ctx.clearRect(0, 0, cw, ch);\n\n    // Background\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(0, 0, cw, ch);\n    ctx.fillStyle = \"black\";\n\n    // Draw the lines\n    for (var d1 = 0; d1 < 602; d1 += gridsize) {\n      ctx.fillRect(d1, 0, b, ch);\n      ctx.fillRect(0, d1, cw, b);\n    }\n\n    // Draw the 4 weird little circles around the middle 4 squares:\n    ctx.beginPath();\n    ctx.arc(150 + b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n    ctx.fill();\n    ctx.closePath();\n    ctx.beginPath();\n    ctx.arc(150 + b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n    ctx.fill();\n    ctx.closePath();\n    ctx.beginPath();\n    ctx.arc(452 - b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n    ctx.fill();\n    ctx.closePath();\n    ctx.beginPath();\n    ctx.arc(452 - b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n    ctx.fill();\n    ctx.closePath();\n\n    // Change the content of the piece-counters\n    // numWhiteElement.textContent = \"white:  \" + whiteCount;\n    // numBlackElement.textContent = \"black:  \" + blackCount;\n\n    // Draw the pieces\n    for (let x = 0; x < 8; x++) {\n      for (let y = 0; y < 8; y++) {\n        if (board[x][y] == \"W\") {\n          ctx.beginPath();\n          ctx.arc(\n          // define the circle\n          x * gridsize + gridsize / 2, y * gridsize + gridsize / 2, gridsize / 2 - 4 * b,\n          // radius\n          0,\n          // startAngle\n          2 * Math.PI // endAngle\n          );\n\n          ctx.fillStyle = \"white\";\n          ctx.fill();\n          ctx.closePath();\n        } else if (board[x][y] == \"B\") {\n          ctx.beginPath();\n          ctx.arc(x * gridsize + gridsize / 2, y * gridsize + gridsize / 2, gridsize / 2 - 4 * b, 0, 2 * Math.PI);\n          ctx.fillStyle = \"black\";\n          ctx.fill();\n          ctx.closePath();\n        }\n      }\n    }\n\n    // Start menu code (likely to change over time!)\n    if (started == 0) {\n      ctx.fillStyle = \"#fffa\";\n      ctx.fillRect(0, 0, cw, ch);\n      ctx.font = \"30px arial\";\n      ctx.fillStyle = \"#000\";\n      ctx.textAlign = \"center\";\n      ctx.fillText(\"Click the Connect button to start the game.\", cw / 2, 100);\n    }\n  }\n  useEffect(() => {\n    if (ctx) {\n      ctx.mozImageSmoothingEnabled = false;\n      ctx.imageSmoothingEnabled = false;\n    }\n    obtainScreenInformation();\n    window.addEventListener(\"orientationchange\", obtainScreenInformation, false);\n    init();\n    const interval = setInterval(draw, 1000 / 50); // 50 fps\n\n    return () => clearInterval(interval);\n  }, [board, whiteCount, blackCount]);\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const boundingRect = canvas.getBoundingClientRect();\n    const x = event.clientX - boundingRect.left;\n    const y = event.clientY - boundingRect.top;\n    if (started === 0) return;\n    const targetX = Math.floor(x / gridsize);\n    const targetY = Math.floor(y / gridsize);\n    if (board[targetX][targetY] !== \"\") return;\n    const newBoard = [...board];\n    newBoard[targetX][targetY] = turn;\n    setBoard(newBoard);\n    const newTurn = turn === \"W\" ? \"B\" : \"W\";\n    setTurn(newTurn);\n    if (newTurn === \"W\") {\n      setWhiteCount(prevCount => prevCount + 1);\n    } else {\n      setBlackCount(prevCount => prevCount + 1);\n    }\n  };\n  const handleConnectClick = () => {\n    let gameId;\n    if (!userId) {\n      if (!guestId) {\n        guestId = crypto.randomUUID();\n        localStorage.setItem(\"guestid\", guestId);\n      } else {\n        gameId = guestId;\n      }\n    } else {\n      gameId = userId;\n    }\n    setStarted(1);\n    const newWs = new WebSocket(\"ws://localhost:8000/othelloml_api/ws/pvp-session/\" + gameId);\n    setWs(newWs);\n    newWs.onmessage = event => {\n      const msg = JSON.parse(event.data);\n      console.log(msg);\n    };\n    newWs.onopen = event => {\n      newWs.send(\"d\");\n    };\n    newWs.onclose = event => {\n      alert(\"Connection lost! This might be intentional.\");\n    };\n    newWs.onerror = event => {\n      alert(\"Error occurred!\");\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        alt: \"Logo\",\n        className: styles.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '60px'\n        },\n        children: \"Othello ML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nav,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          id: styles.home,\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: styles.button,\n          id: styles.newGameBtn,\n          children: \"Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search player\",\n          id: styles.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.game,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center ms-3\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            onClick: handleCanvasClick,\n            id: styles.oth,\n            width: \"602\",\n            height: \"602\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.gameText,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.count,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                id: styles.numWhite,\n                children: [\"White: \", whiteCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                id: styles.numBlack,\n                children: [\"Black: \", blackCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: styles.connectBtn,\n              onClick: handleConnectClick,\n              children: \"Connect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n_s(GamePage, \"DwK8yAYXa+RgJK+QGVWwFYwXD3c=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Logo","styles","jsxDEV","_jsxDEV","GamePage","_s","canvasRef","started","setStarted","board","setBoard","whiteCount","setWhiteCount","blackCount","setBlackCount","turn","setTurn","ws","setWs","userId","setUserId","localStorage","getItem","guestId","setGuestId","canvas","current","ctx","getContext","cw","width","ch","height","b","gridsize","obtainScreenInformation","mobile","init","initialBoard","Array","fill","map","draw","clearRect","fillStyle","fillRect","d1","beginPath","arc","Math","PI","closePath","x","y","font","textAlign","fillText","mozImageSmoothingEnabled","imageSmoothingEnabled","window","addEventListener","interval","setInterval","clearInterval","handleCanvasClick","event","boundingRect","getBoundingClientRect","clientX","left","clientY","top","targetX","floor","targetY","newBoard","newTurn","prevCount","handleConnectClick","gameId","crypto","randomUUID","setItem","newWs","WebSocket","onmessage","msg","JSON","parse","data","console","log","onopen","send","onclose","alert","onerror","className","children","header","alt","logo","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","main","nav","href","id","home","button","newGameBtn","type","placeholder","search","game","ref","onClick","oth","gameText","count","numWhite","numBlack","connectBtn","_c","$RefreshReg$"],"sources":["/Users/yushanlu/Desktop/Othello/othello-test/src/GamePage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Logo from './Logo';\nimport './GamePage.module.css';\nimport styles from './GamePage.module.css';\n\nfunction GamePage() {\n    const canvasRef = useRef(null);\n    const [started, setStarted] = useState(0);\n    const [board, setBoard] = useState([]);\n    const [whiteCount, setWhiteCount] = useState(2);\n    const [blackCount, setBlackCount] = useState(2);\n    const [turn, setTurn] = useState(\"W\");\n    const [ws, setWs] = useState(null);\n    const [userId, setUserId] = useState(localStorage.getItem(\"userid\"));\n    const [guestId, setGuestId] = useState(localStorage.getItem(\"guestid\"));\n\n    const canvas = canvasRef.current;\n    const ctx = canvas && canvas.getContext(\"2d\");\n    const cw = canvas && canvas.width;\n    const ch = canvas && canvas.height;\n    const b = 2; // Padding between cells\n    const gridsize = 75;\n\n    function obtainScreenInformation() {\n        const mobile = canvas.height > canvas.width;\n    }\n\n    function init() {\n        const initialBoard = Array(8).fill(\"\").map(() => Array(8).fill(\"\"));\n        initialBoard[3][3] = \"W\";\n        initialBoard[4][3] = \"B\";\n        initialBoard[4][4] = \"W\";\n        initialBoard[3][4] = \"B\";\n        setBoard(initialBoard);\n        setWhiteCount(2);\n        setBlackCount(2);\n    }\n\n    function draw() {\n        if (!ctx) return;\n        // Without this, previous frames remain on the screen\n        ctx.clearRect(0, 0, cw, ch);\n    \n        // Background\n        ctx.fillStyle = \"green\";\n        ctx.fillRect(0, 0, cw, ch);\n    \n        ctx.fillStyle = \"black\";\n    \n        // Draw the lines\n        for (var d1 = 0; d1 < 602; d1 += gridsize) {\n            ctx.fillRect(d1, 0, b, ch);\n            ctx.fillRect(0, d1, cw, b);\n        }\n    \n        // Draw the 4 weird little circles around the middle 4 squares:\n        ctx.beginPath();\n        ctx.arc(150 + b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n        ctx.fill();\n        ctx.closePath();\n    \n        ctx.beginPath();\n        ctx.arc(150 + b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n        ctx.fill();\n        ctx.closePath();\n        ctx.beginPath();\n    \n        ctx.arc(452 - b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n        ctx.fill();\n        ctx.closePath();\n    \n        ctx.beginPath();\n        ctx.arc(452 - b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n        ctx.fill();\n        ctx.closePath();\n    \n        // Change the content of the piece-counters\n        // numWhiteElement.textContent = \"white:  \" + whiteCount;\n        // numBlackElement.textContent = \"black:  \" + blackCount;\n    \n        // Draw the pieces\n        for (let x = 0; x < 8; x++) {\n            for (let y = 0; y < 8; y++) {\n                if (board[x][y] == \"W\") {\n                    ctx.beginPath();\n                    ctx.arc( // define the circle\n                        x * gridsize + gridsize / 2,\n                        y * gridsize + gridsize / 2,\n                        gridsize / 2 - 4 * b, // radius\n                        0, // startAngle\n                        2 * Math.PI // endAngle\n                    );\n                    ctx.fillStyle = \"white\";\n                    ctx.fill();\n                    ctx.closePath();\n                } else if (board[x][y] == \"B\") {\n                    ctx.beginPath();\n                    ctx.arc(\n                        x * gridsize + gridsize / 2,\n                        y * gridsize + gridsize / 2,\n                        gridsize / 2 - 4 * b,\n                        0,\n                        2 * Math.PI\n                    );\n                    ctx.fillStyle = \"black\";\n                    ctx.fill();\n                    ctx.closePath();\n                }\n            }\n        }\n    \n        // Start menu code (likely to change over time!)\n        if (started == 0) {\n            ctx.fillStyle = \"#fffa\";\n            ctx.fillRect(0, 0, cw, ch);\n    \n            ctx.font = \"30px arial\";\n            ctx.fillStyle = \"#000\";\n            ctx.textAlign = \"center\";\n            ctx.fillText(\"Click the Connect button to start the game.\", cw / 2, 100);\n        }\n    }\n\n    useEffect(() => {\n        if (ctx) {\n            ctx.mozImageSmoothingEnabled = false;\n            ctx.imageSmoothingEnabled = false;\n        }\n\n        obtainScreenInformation();\n        window.addEventListener(\"orientationchange\", obtainScreenInformation, false);\n        init();\n        const interval = setInterval(draw, 1000 / 50); // 50 fps\n\n        return () => clearInterval(interval);\n    }, [board, whiteCount, blackCount]);\n\n    const handleCanvasClick = (event) => {\n        const canvas = canvasRef.current;\n        const boundingRect = canvas.getBoundingClientRect();\n        const x = event.clientX - boundingRect.left;\n        const y = event.clientY - boundingRect.top;\n\n        if (started === 0) return;\n\n        const targetX = Math.floor(x / gridsize);\n        const targetY = Math.floor(y / gridsize);\n\n        if (board[targetX][targetY] !== \"\") return;\n\n        const newBoard = [...board];\n        newBoard[targetX][targetY] = turn;\n        setBoard(newBoard);\n\n        const newTurn = turn === \"W\" ? \"B\" : \"W\";\n        setTurn(newTurn);\n\n        if (newTurn === \"W\") {\n            setWhiteCount(prevCount => prevCount + 1);\n        } else {\n            setBlackCount(prevCount => prevCount + 1);\n        }\n    };\n\n    const handleConnectClick = () => {\n\n        let gameId;\n        if (!userId) {\n            if (!guestId) {\n                guestId = crypto.randomUUID();\n                localStorage.setItem(\"guestid\", guestId);\n            } else {\n                gameId = guestId;\n            }\n        } else {\n            gameId = userId;\n        }\n\n        setStarted(1);\n\n        const newWs = new WebSocket(\"ws://localhost:8000/othelloml_api/ws/pvp-session/\" + gameId);\n        setWs(newWs);\n\n        newWs.onmessage = (event) => {\n            const msg = JSON.parse(event.data);\n            console.log(msg);\n        };\n\n        newWs.onopen = (event) => {\n            newWs.send(\"d\");\n        };\n\n        newWs.onclose = (event) => {\n            alert(\"Connection lost! This might be intentional.\");\n        };\n\n        newWs.onerror = (event) => {\n            alert(\"Error occurred!\");\n        };\n    };\n\n    return (\n        <div className=\"container py5\">\n            <div className={styles.header}>\n                <Logo alt=\"Logo\" className={styles.logo} />\n                <h1 style={{ fontSize: '60px' }}>Othello ML</h1>\n            </div>\n            <div className={styles.main}>\n                <div className={styles.nav}>\n                    <a href=\"#\" id={styles.home}>Home</a>\n                    <a href=\"#\" className={styles.button} id={styles.newGameBtn}>Game</a>\n                    <a href=\"#\">Rules</a>\n                    <a href=\"#\">About</a>\n                    <input type=\"text\" placeholder=\"search player\" id={styles.search} />\n                </div>\n                <div className={styles.game}>\n                    <div className=\"text-center ms-3\">\n                        <canvas ref={canvasRef} onClick={handleCanvasClick} id={styles.oth} width=\"602\" height=\"602\"></canvas>\n                    </div>\n                    <div className={styles.gameText}>\n                        <div>\n                            <div className={styles.count}>\n                                <h2 id={styles.numWhite}>White: {whiteCount}</h2>\n                                <h2 id={styles.numBlack}>Black: {blackCount}</h2>\n                            </div>\n                        </div>\n                        <div>\n                            <button id={styles.connectBtn} onClick={handleConnectClick}>Connect</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}