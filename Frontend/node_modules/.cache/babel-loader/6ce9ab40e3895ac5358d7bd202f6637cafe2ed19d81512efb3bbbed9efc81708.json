{"ast":null,"code":"var _jsxFileName = \"/Users/yushanlu/Desktop/Othello/othello-test/src/GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './GamePage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const canvasRef = useRef(null);\n  const [started, setStarted] = useState(0);\n  const [board, setBoard] = useState([]);\n  const [whiteCount, setWhiteCount] = useState(2);\n  const [blackCount, setBlackCount] = useState(2);\n  const [turn, setTurn] = useState(\"W\");\n  const [ws, setWs] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.mozImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    const cw = canvas.width;\n    const ch = canvas.height;\n    const b = 2; // Padding between cells\n    const gridsize = 75;\n    function obtainScreenInformation() {\n      const mobile = canvas.height > canvas.width;\n    }\n    function init() {\n      const initialBoard = Array(8).fill(\"\").map(() => Array(8).fill(\"\"));\n      initialBoard[3][3] = \"W\";\n      initialBoard[4][3] = \"B\";\n      initialBoard[4][4] = \"W\";\n      initialBoard[3][4] = \"B\";\n      setBoard(initialBoard);\n      setWhiteCount(2);\n      setBlackCount(2);\n    }\n    function draw() {\n      // Without this, previous frames remain on the screen\n      ctx.clearRect(0, 0, cw, ch);\n\n      // Background\n      ctx.fillStyle = \"green\";\n      ctx.fillRect(0, 0, cw, ch);\n      ctx.fillStyle = \"black\";\n\n      // Draw the lines\n      for (var d1 = 0; d1 < 602; d1 += gridsize) {\n        ctx.fillRect(d1, 0, b, ch);\n        ctx.fillRect(0, d1, cw, b);\n      }\n\n      // Draw the 4 weird little circles around the middle 4 squares:\n      ctx.beginPath();\n      ctx.arc(150 + b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n      ctx.beginPath();\n      ctx.arc(150 + b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n      ctx.beginPath();\n      ctx.arc(452 - b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n      ctx.beginPath();\n      ctx.arc(452 - b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n      ctx.fill();\n      ctx.closePath();\n\n      // Change the content of the piece-counters\n      numWhiteElement.textContent = \"white:  \" + whiteCount;\n      numBlackElement.textContent = \"black:  \" + blackCount;\n\n      // Draw the pieces\n      for (let x = 0; x < 8; x++) {\n        for (let y = 0; y < 8; y++) {\n          if (board[x][y] == \"W\") {\n            ctx.beginPath();\n            ctx.arc(\n            // define the circle\n            x * gridsize + gridsize / 2, y * gridsize + gridsize / 2, gridsize / 2 - 4 * b,\n            // radius\n            0,\n            // startAngle\n            2 * Math.PI // endAngle\n            );\n\n            ctx.fillStyle = \"white\";\n            ctx.fill();\n            ctx.closePath();\n          } else if (board[x][y] == \"B\") {\n            ctx.beginPath();\n            ctx.arc(x * gridsize + gridsize / 2, y * gridsize + gridsize / 2, gridsize / 2 - 4 * b, 0, 2 * Math.PI);\n            ctx.fillStyle = \"black\";\n            ctx.fill();\n            ctx.closePath();\n          }\n        }\n      }\n\n      // Start menu code (likely to change over time!)\n      if (started == 0) {\n        ctx.fillStyle = \"#fffa\";\n        ctx.fillRect(0, 0, cw, ch);\n        ctx.font = \"30px arial\";\n        ctx.fillStyle = \"#000\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"Click the Connect button to start the game.\", cw / 2, 100);\n      }\n    }\n    obtainScreenInformation();\n    window.addEventListener(\"orientationchange\", obtainScreenInformation, false);\n    init();\n    const interval = setInterval(draw, 1000 / 50); // 50 fps\n\n    return () => clearInterval(interval);\n  }, [board, whiteCount, blackCount]);\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const boundingRect = canvas.getBoundingClientRect();\n    const x = event.clientX - boundingRect.left;\n    const y = event.clientY - boundingRect.top;\n    if (started === 0) return;\n    const targetX = Math.floor(x / gridsize);\n    const targetY = Math.floor(y / gridsize);\n    if (board[targetX][targetY] !== \"\") return;\n    const newBoard = [...board];\n    newBoard[targetX][targetY] = turn;\n    setBoard(newBoard);\n    const newTurn = turn === \"W\" ? \"B\" : \"W\";\n    setTurn(newTurn);\n    if (newTurn === \"W\") {\n      setWhiteCount(prevCount => prevCount + 1);\n    } else {\n      setBlackCount(prevCount => prevCount + 1);\n    }\n  };\n  const handleConnectClick = () => {\n    init();\n    let gameId;\n    if (!userId) {\n      if (!guestId) {\n        guestId = crypto.randomUUID();\n        localStorage.setItem(\"guestid\", guestId);\n      } else {\n        gameId = guestId;\n      }\n    } else {\n      gameId = userId;\n    }\n    setStarted(1);\n    const newWs = new WebSocket(\"ws://localhost:8000/othelloml_api/ws/pvp-session/\" + gameId);\n    setWs(newWs);\n    newWs.onmessage = event => {\n      const msg = JSON.parse(event.data);\n      console.log(msg);\n    };\n    newWs.onopen = event => {\n      newWs.send(\"d\");\n    };\n    newWs.onclose = event => {\n      alert(\"Connection lost! This might be intentional.\");\n    };\n    newWs.onerror = event => {\n      alert(\"Error occurred!\");\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"logo.svg\",\n        alt: \"Logo\",\n        id: styles.logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '60px'\n        },\n        children: \"Othello ML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nav,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          id: styles.home,\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: styles.button,\n          id: styles.newGameBtn,\n          children: \"Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search player\",\n          id: styles.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.game,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.textCenter,\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            onClick: handleCanvasClick,\n            id: styles.oth,\n            width: \"602\",\n            height: \"602\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.gameText,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.count,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                id: styles.numWhite,\n                children: [\"White: \", whiteCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                id: styles.numBlack,\n                children: [\"Black: \", blackCount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: styles.connectBtn,\n              onClick: handleConnectClick,\n              children: \"Connect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n_s(GamePage, \"Uuh/jwXRPjVtCqUtOD4IsTw7Crk=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styles","jsxDEV","_jsxDEV","GamePage","_s","canvasRef","started","setStarted","board","setBoard","whiteCount","setWhiteCount","blackCount","setBlackCount","turn","setTurn","ws","setWs","canvas","current","ctx","getContext","mozImageSmoothingEnabled","imageSmoothingEnabled","cw","width","ch","height","b","gridsize","obtainScreenInformation","mobile","init","initialBoard","Array","fill","map","draw","clearRect","fillStyle","fillRect","d1","beginPath","arc","Math","PI","closePath","numWhiteElement","textContent","numBlackElement","x","y","font","textAlign","fillText","window","addEventListener","interval","setInterval","clearInterval","handleCanvasClick","event","boundingRect","getBoundingClientRect","clientX","left","clientY","top","targetX","floor","targetY","newBoard","newTurn","prevCount","handleConnectClick","gameId","userId","guestId","crypto","randomUUID","localStorage","setItem","newWs","WebSocket","onmessage","msg","JSON","parse","data","console","log","onopen","send","onclose","alert","onerror","className","container","children","header","src","alt","id","logo","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","main","nav","href","home","button","newGameBtn","type","placeholder","search","game","textCenter","ref","onClick","oth","gameText","count","numWhite","numBlack","connectBtn","_c","$RefreshReg$"],"sources":["/Users/yushanlu/Desktop/Othello/othello-test/src/GamePage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styles from './GamePage.module.css';\n\nfunction GamePage() {\n    const canvasRef = useRef(null);\n    const [started, setStarted] = useState(0);\n    const [board, setBoard] = useState([]);\n    const [whiteCount, setWhiteCount] = useState(2);\n    const [blackCount, setBlackCount] = useState(2);\n    const [turn, setTurn] = useState(\"W\");\n    const [ws, setWs] = useState(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.mozImageSmoothingEnabled = false;\n        ctx.imageSmoothingEnabled = false;\n\n        const cw = canvas.width;\n        const ch = canvas.height;\n        const b = 2; // Padding between cells\n        const gridsize = 75;\n\n        function obtainScreenInformation() {\n            const mobile = canvas.height > canvas.width;\n        }\n\n        function init() {\n            const initialBoard = Array(8).fill(\"\").map(() => Array(8).fill(\"\"));\n            initialBoard[3][3] = \"W\";\n            initialBoard[4][3] = \"B\";\n            initialBoard[4][4] = \"W\";\n            initialBoard[3][4] = \"B\";\n            setBoard(initialBoard);\n            setWhiteCount(2);\n            setBlackCount(2);\n        }\n\n        function draw() {\n            // Without this, previous frames remain on the screen\n            ctx.clearRect(0, 0, cw, ch);\n        \n            // Background\n            ctx.fillStyle = \"green\";\n            ctx.fillRect(0, 0, cw, ch);\n        \n            ctx.fillStyle = \"black\";\n        \n            // Draw the lines\n            for (var d1 = 0; d1 < 602; d1 += gridsize) {\n                ctx.fillRect(d1, 0, b, ch);\n                ctx.fillRect(0, d1, cw, b);\n            }\n        \n            // Draw the 4 weird little circles around the middle 4 squares:\n            ctx.beginPath();\n            ctx.arc(150 + b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n            ctx.fill();\n            ctx.closePath();\n        \n            ctx.beginPath();\n            ctx.arc(150 + b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n            ctx.fill();\n            ctx.closePath();\n            ctx.beginPath();\n        \n            ctx.arc(452 - b / 2, 150 + b / 2, 3 * b, 0, 3 * Math.PI);\n            ctx.fill();\n            ctx.closePath();\n        \n            ctx.beginPath();\n            ctx.arc(452 - b / 2, 452 - b / 2, 3 * b, 0, 3 * Math.PI);\n            ctx.fill();\n            ctx.closePath();\n        \n            // Change the content of the piece-counters\n            numWhiteElement.textContent = \"white:  \" + whiteCount;\n            numBlackElement.textContent = \"black:  \" + blackCount;\n        \n            // Draw the pieces\n            for (let x = 0; x < 8; x++) {\n                for (let y = 0; y < 8; y++) {\n                    if (board[x][y] == \"W\") {\n                        ctx.beginPath();\n                        ctx.arc( // define the circle\n                            x * gridsize + gridsize / 2,\n                            y * gridsize + gridsize / 2,\n                            gridsize / 2 - 4 * b, // radius\n                            0, // startAngle\n                            2 * Math.PI // endAngle\n                        );\n                        ctx.fillStyle = \"white\";\n                        ctx.fill();\n                        ctx.closePath();\n                    } else if (board[x][y] == \"B\") {\n                        ctx.beginPath();\n                        ctx.arc(\n                            x * gridsize + gridsize / 2,\n                            y * gridsize + gridsize / 2,\n                            gridsize / 2 - 4 * b,\n                            0,\n                            2 * Math.PI\n                        );\n                        ctx.fillStyle = \"black\";\n                        ctx.fill();\n                        ctx.closePath();\n                    }\n                }\n            }\n        \n            // Start menu code (likely to change over time!)\n            if (started == 0) {\n                ctx.fillStyle = \"#fffa\";\n                ctx.fillRect(0, 0, cw, ch);\n        \n                ctx.font = \"30px arial\";\n                ctx.fillStyle = \"#000\";\n                ctx.textAlign = \"center\";\n                ctx.fillText(\"Click the Connect button to start the game.\", cw / 2, 100);\n            }\n        }\n\n        obtainScreenInformation();\n        window.addEventListener(\"orientationchange\", obtainScreenInformation, false);\n        init();\n        const interval = setInterval(draw, 1000 / 50); // 50 fps\n\n        return () => clearInterval(interval);\n    }, [board, whiteCount, blackCount]);\n\n    const handleCanvasClick = (event) => {\n        const canvas = canvasRef.current;\n        const boundingRect = canvas.getBoundingClientRect();\n        const x = event.clientX - boundingRect.left;\n        const y = event.clientY - boundingRect.top;\n\n        if (started === 0) return;\n\n        const targetX = Math.floor(x / gridsize);\n        const targetY = Math.floor(y / gridsize);\n\n        if (board[targetX][targetY] !== \"\") return;\n\n        const newBoard = [...board];\n        newBoard[targetX][targetY] = turn;\n        setBoard(newBoard);\n\n        const newTurn = turn === \"W\" ? \"B\" : \"W\";\n        setTurn(newTurn);\n\n        if (newTurn === \"W\") {\n            setWhiteCount(prevCount => prevCount + 1);\n        } else {\n            setBlackCount(prevCount => prevCount + 1);\n        }\n    };\n\n    const handleConnectClick = () => {\n        init();\n\n        let gameId;\n        if (!userId) {\n            if (!guestId) {\n                guestId = crypto.randomUUID();\n                localStorage.setItem(\"guestid\", guestId);\n            } else {\n                gameId = guestId;\n            }\n        } else {\n            gameId = userId;\n        }\n\n        setStarted(1);\n\n        const newWs = new WebSocket(\"ws://localhost:8000/othelloml_api/ws/pvp-session/\" + gameId);\n        setWs(newWs);\n\n        newWs.onmessage = (event) => {\n            const msg = JSON.parse(event.data);\n            console.log(msg);\n        };\n\n        newWs.onopen = (event) => {\n            newWs.send(\"d\");\n        };\n\n        newWs.onclose = (event) => {\n            alert(\"Connection lost! This might be intentional.\");\n        };\n\n        newWs.onerror = (event) => {\n            alert(\"Error occurred!\");\n        };\n    };\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.header}>\n                <img src=\"logo.svg\" alt=\"Logo\" id={styles.logo} />\n                <h1 style={{ fontSize: '60px' }}>Othello ML</h1>\n            </div>\n            <div className={styles.main}>\n                <div className={styles.nav}>\n                    <a href=\"#\" id={styles.home}>Home</a>\n                    <a href=\"#\" className={styles.button} id={styles.newGameBtn}>Game</a>\n                    <a href=\"#\">Rules</a>\n                    <a href=\"#\">About</a>\n                    <input type=\"text\" placeholder=\"search player\" id={styles.search} />\n                </div>\n                <div className={styles.game}>\n                    <div className={styles.textCenter}>\n                        <canvas ref={canvasRef} onClick={handleCanvasClick} id={styles.oth} width=\"602\" height=\"602\"></canvas>\n                    </div>\n                    <div className={styles.gameText}>\n                        <div>\n                            <div className={styles.count}>\n                                <h2 id={styles.numWhite}>White: {whiteCount}</h2>\n                                <h2 id={styles.numBlack}>Black: {blackCount}</h2>\n                            </div>\n                        </div>\n                        <div>\n                            <button id={styles.connectBtn} onClick={handleConnectClick}>Connect</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}